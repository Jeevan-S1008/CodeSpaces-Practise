from django.db import models
# Create your models here.
class Student(models.Model):
name = models.CharField(max_length=255)
email = models.EmailField(unique=True)
def __str__(self):
return self.name
class Course(models.Model):
title = models.CharField(max_length=255)
description = models.TextField(blank=True)
def __str__(self):
return self.title
class Enrollment(models.Model):
student = models.ForeignKey(Student,on_delete=models.CASCADE)
course = models.ForeignKey(Course,on_delete=models.CASCADE)
class Meta:
constraints
=[models.UniqueConstraint(fields=['student','course'],name='unique_enrolment')]


#his Meta class is used to specify additional configuration options for your model.
#Constraints are essentially rules that limit the kind of data that can be stored in the database
for this model.
#This specific constraint enforces uniqueness on a combination of two fields: student and
course
#Imagine a scenario where you might accidentally try to enroll the same student in the same
course twice. This constraint would prevent that from happening in the database.
python manage.py makemigrations
python manage.py migrate
python manage.py shell
from app_name.models import Student, Course, Enrollment
>>>student1 = Student.objects.create(name = 'John Doe',email = 'john.doe@example.com')
>>> student2 = Student.objects.create(name = 'Jane Smith',email = 'jane.smith@example.com')
>>> course1 = Course.objects.create(title = 'Introduction to Python',description = 'Learn Python
Basics')
>>> stud = Student.objects.filter(name = 'John Doe')[0]
>>> cour = Course.objects.filter(title = 'Introduction to Python')[0]
>>> enroll = Enrollment.objects.create(student = stud,course = cour)
>>> print(enroll)
Enrollment object (1)
stud = Student.objects.filter(name = 'Jane Smith')[0]
>>> enroll = Enrollment.objects.create(student = stud,course = cour)
course2 = Course.objects.create(title = 'Django for Beginners',description = 'Learn Django
Basics')
>>> student3 = Student.objects.create(name = 'James Bill',email = 'james.bill@example.com')
>>> student4 = Student.objects.create(name = 'Jill Mathew',email = 'jill.mathew@example.com')
>>> enroll_stud = Enrollment.objects.create(student=student3,course=course2)
>>> print(enroll_stud)
Enrollment object (3)
>>> enroll_stud = Enrollment.objects.create(student=student4,course=course2)
>>> print(enroll_stud)
Enrollment object (4)
views.py
from django.shortcuts import render
from program7_app.models import Course
# Create your views here.
def students_enrolled(request, course_id):
course = Course.objects.get(pk=course_id)
enrolled_students = course.enrollment_set.all() # Access through Enrollment
context = {'course': course, 'enrolled_students': enrolled_students}
return render(request, 'program7_app/students_enrolled.html', context)
urls.py
from django.contrib import admin
from django.urls import path
from program7_app import views
urlpatterns = [
path('students_enrolled/<int:course_id>/', views.students_enrolled,
]
students_enrolled.html
<!DOCTYPE html>
<html>
<head>
<title>Students Enrolled in {{ course.title }}</title>
</head>
<body>
<h1>Students Enrolled in {{ course.title }}</h1>
<table>
<tr>
<th>Name</th>
<th>Email</th>
</tr>
<tbody> {% for student in enrolled_students %}
<tr>
<td>{{ student.student.name }}</td> {% comment %} Access student through
enrollment {% endcomment %}
<td>{{ student.student.email }}</td>
</tr>
{% endfor %}
</tbody> </table>
</body>
</html>